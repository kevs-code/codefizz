#baboons|gorillas
#or |

#[chr]at
cat
hat
rat

#wilcards . 1 * many 
#/ escape

....\.
bear.
lion.
orca.

#ranges

[c-e][l-u][b-k]
cub
dog
elk

\d [0-9]
\s whitespace characther [^ \t\r\n\f\v] single space, tab, carriage return, line break, form feed, vertical tab.

\w [A-Za-z0-9_]

\W not a word, opposite \w
\D not a digit, opposite \d
\S not a whitespace, opposite \w

\d\s\w+

5 sloths
8 llamas
7 hyenas

grouping

puppies.*|kitty.*
#ok
puppies are my favorite!
kitty cats are my favorite!
#not ok
deer are my favorite!
otters are my favorite!
hedgehogs are my favorite!

\w{3] 3 characters
\w{4,7} 4 to seven characters

squea{3,5}k 3 to 5 aaa aaaaa

squeaaak
squeaaaak
squeaaaaak

? optional quantifiers
 
humou?r looks for 0 or 1 u in match humor humour

The monkey ate a (rotten )?banana
matches
The monkey ate a rotten banana
The monkey ate a banana

. +
e.g.,
hoo.*t
matches ...
hoot
hoooooot
hoooooooooot
not ...
hot
hoat
hoo

^ $

^p.*s$

matches ...
penguins are cooler than regular expressions

#regex mess
^\(?\d+[\s-]?.*
(maybe just ^\W+)

matches
718-555-3810
9175552849
1 212 555 3821
(917)5551298
212.555.8731

not
wildebeest
hippopotamus
woolly mammoth

Review
Do you feel those regular expression superpowers coursing through your body? Do you just want to scream ah+ really loud? Awesome! You are now ready to take these skills and use them out in the wild. Before beginning your adventures, let’s review what we’ve learned.

Regular expressions are special sequences of characters that describe a pattern of text that is to be matched
We can use literals to match the exact characters that we desire
Alternation, using the pipe symbol |, allows us to match the text preceding or following the |
Character sets, denoted by a pair of brackets [], let us match one character from a series of characters
Wildcards, represented by the period or dot ., will match any single character (letter, number, symbol or whitespace)
Ranges allow us to specify a range of characters in which we can make a match
Shorthand character classes like \w, \d and \s represent the ranges representing word characters, digit characters, and whitespace characters, respectively
Groupings, denoted with parentheses (), group parts of a regular expression together, and allows us to limit alternation to part of a regex
Fixed quantifiers, represented with curly braces {}, let us indicate the exact quantity or a range of quantity of a character we wish to match
Optional quantifiers, indicated by the question mark ?, allow us to indicate a character in a regex is optional, or can appear either 0 times or 1 time
The Kleene star, denoted with the asterisk *, is a quantifier that matches the preceding character 0 or more times
The Kleene plus, denoted by the plus +, matches the preceding character 1 or more times
The anchor symbols hat ^ and dollar sign $ are used to match text at the start and end of a string, respectively
