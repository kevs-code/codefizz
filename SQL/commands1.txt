SELECT * FROM movies;

SELECT name, genre 
FROM movies;

SELECT name, genre, year 
FROM movies;

SELECT imdb_rating AS 'IMDB'
FROM movies;

SELECT DISTINCT genre 
FROM movies;

SELECT * 
FROM movies 
WHERE imdb_rating < 5;

SELECT * 
FROM movies 
WHERE year > 2014;

SELECT * 
FROM movies
WHERE name LIKE 'Se_en';

//_ is a wildcard for one letter

//A% matches all movies with names that begin with letter ‘A’
//%a matches all movies that end with ‘a’

SELECT * 
FROM movies
WHERE name LIKE '%man%';

SELECT * 
FROM movies
WHERE name LIKE 'the %';

SELECT name
FROM movies 
WHERE imdb_rating IS NOT NULL;

SELECT name
FROM movies 
WHERE imdb_rating IS NULL;

SELECT *
FROM movies
WHERE name BETWEEN 'D' AND 'G';

//between d and g is between d and f and the letter G only like dictionary

//WHERE name BETWEEN 'D' AND 'GO'; up to GO doesn't work 

SELECT *
FROM movies
WHERE year BETWEEN 1990 AND 1999; 
//includes 1999

SELECT *
FROM movies
WHERE year BETWEEN 1970 AND 1979
  AND imdb_rating > 8;

SELECT *
FROM movies
WHERE genre = 'horror'
  AND year < 1985;

SELECT *
FROM movies
WHERE year > 2014
   OR genre = 'action';

SELECT *
FROM movies
WHERE genre = 'comedy'
   OR genre = 'romance';

SELECT name, year
FROM movies
ORDER BY name;

SELECT name, year, imdb_rating
FROM movies
ORDER BY imdb_rating DESC;

SELECT *
FROM movies
WHERE imdb_rating > 8
ORDER BY year DESC;

SELECT *
FROM movies
ORDER BY imdb_rating DESC
LIMIT 3;

// CASE below add a new column review with a string
SELECT name,
 CASE
  WHEN imdb_rating > 8 THEN 'Fantastic'
  WHEN imdb_rating > 6 THEN 'Poorly Received'
  ELSE 'Avoid at All Costs'
 END AS 'Review'
FROM movies;

SELECT name,
 CASE
  WHEN genre = 'romance' THEN 'Chill'
  WHEN genre = 'comedy' THEN 'Chill'
  ELSE 'Intense'
 END AS 'Mood'
FROM movies;

Review
Congratulations!

We just learned how to query data from a database using SQL. We also learned how to filter queries to make the information more specific and useful.

Let’s summarize:

SELECT is the clause we use every time we want to query information from a database.
AS renames a column or table.
DISTINCT return unique values.
WHERE is a popular command that lets you filter the results of the query based on conditions that you specify.
LIKE and BETWEEN are special operators.
AND and OR combines multiple conditions.
ORDER BY sorts the result.
LIMIT specifies the maximum number of rows that the query will return.
CASE creates different outputs.
